* deleting/changing a foreign key should handle referring fields (ON DELETE/UPDATE RESTRICT/CASCADE/SET_NULL/NO_ACTION)

* user rights management for databases, tables, columns and individual rows (ALTER/CREATE/DELETE/DROP/INSERT/SELECT/UPDATE)

  I guess by introducing a new table for the databases

  CREATE TABLE databases (
    databaseid       INT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY,
    databasename     VARCHAR(100) NOT NULL,
    UNIQUE KEY (databasename)
  );

  and one for the users

  CREATE TABLE users (
    userid           INT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY,
    username         VARCHAR(100) NOT NULL,
    UNIQUE KEY (username)
  );

  and one for the rights itself

  CREATE TABLE rights (
    rightid          INT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY,
    userid           INT UNSIGNED NOT NULL REFERENCES users (userid), 
    databaseid       INT UNSIGNED NOT NULL REFERENCES databases (databaseid), 
    tableid          INT UNSIGNED REFERENCES tables (tableid), 
    fieldid          INT UNSIGNED REFERENCES fields (fieldid),
    uniquevalue      INT UNSIGNED,
    candelete        BOOLEAN NOT NULL,
    caninsert        BOOLEAN NOT NULL,
    canselect        BOOLEAN NOT NULL,
    canupdate        BOOLEAN NOT NULL,
    UNIQUE KEY (userid, databaseid, tableid, fieldid, uniquevalue)
  );

  which is synchronized at column level with MySQL's user rights administration (GRANT/REVOKE).

* a query builder for interactive reports

* handle DECIMAL(5,2) better

* handle LONGTEXT better
